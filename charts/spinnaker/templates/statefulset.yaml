apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "spinnaker.fullname" . }}-halyard
  labels:
{{ include "spinnaker.standard-labels" . | indent 4 }}
spec:
  serviceName: {{ template "spinnaker.fullname" . }}-halyard
  replicas: 1
  selector:
    matchLabels:
{{ include "spinnaker.standard-selector-labels" . | indent 6 }}
      component: halyard
  template:
    metadata:
      annotations:
      {{- if .Values.halyard.annotations }}
{{ toYaml .Values.halyard.annotations | indent 8 }}
      {{- end }}
      labels:
{{ include "spinnaker.standard-labels" . | indent 8 }}
        component: halyard
    spec:
      serviceAccountName: halyard-sa
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
    {{- end }}
      initContainers:
      - name: create-halyard-local
        image: {{ .Values.halyard.image.repository }}:{{ .Values.halyard.image.tag }}
        command:
        - bash
        - /tmp/initscript/init.sh
        volumeMounts:
        - name: halyard-initscript
          mountPath: /tmp/initscript
        - name: halyard-home
          mountPath: /tmp/spinnaker
        - name: service-settings
          mountPath: /tmp/service-settings
        {{- if .Values.halyard.serviceConfigs }}
        - name: service-configs
          mountPath: /tmp/service-configs
        {{- end }}
        {{- if .Values.halyard.env }}
        env:
{{ toYaml .Values.halyard.env | indent 8 }}
        {{- end }}
      containers:
      - name: halyard
        image: {{ .Values.halyard.image.repository }}:{{ .Values.halyard.image.tag }}
        ports:
        - containerPort: 8064
          name: daemon
        {{- if .Values.halyard.resources }}
        resources:
{{ toYaml .Values.halyard.resources | indent 10 }}
        {{- end }}
        volumeMounts:
        - name: halyard-home
          mountPath: /home/spinnaker
        {{- if and .Values.s3.enabled .Values.s3.accessKey .Values.s3.secretKey }}
        - name: s3-secrets
          mountPath: /opt/s3
        {{- end }}
        {{- if and .Values.kubeConfig.enabled .Values.kubeConfig.secretName }}
        - name: kube-config
          mountPath: /opt/kube
        {{- end }}
        {{- if .Values.halyard.env }}
        env:
{{ toYaml .Values.halyard.env | indent 8 }}
        {{- end }}
      volumes:
      {{- if not .Values.halyard.persistence.enabled }}
      - name: halyard-home
        emptyDir: {}
      {{- end }}
      {{- if and .Values.kubeConfig.enabled .Values.kubeConfig.secretName }}
      - name: kube-config
        secret:
          secretName: {{ .Values.kubeConfig.secretName }}
      {{- end }}
      {{- if and .Values.s3.enabled .Values.s3.accessKey .Values.s3.secretKey }}
      - name: s3-secrets
        secret:
          secretName: {{ template "spinnaker.fullname" . }}-s3
      {{- end }}
      - name: service-settings
        configMap:
          name: service-settings
      {{- if .Values.halyard.serviceConfigs }}
      - name: service-configs
        configMap:
          name: service-configs
      {{- end }}
      - name: halyard-initscript
        configMap:
          name: halyard-init-script
      {{- if .Values.halyard.image.pullSecrets }}
      imagePullSecrets:
        {{- range .Values.halyard.image.pullSecrets }}
        - name: {{ . }}
        {{- end}}
      {{- end}}
{{- if .Values.halyard.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: halyard-home
      labels:
{{ include "spinnaker.standard-labels-base" . | indent 8 }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- with .Values.halyard.persistence.storageClass }}
      storageClassName: {{ . }}
      {{- end }}
      resources:
        requests:
          storage: 10Gi
{{- end }}
